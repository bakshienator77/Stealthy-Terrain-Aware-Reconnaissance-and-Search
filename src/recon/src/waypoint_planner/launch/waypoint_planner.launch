<launch>
  <arg name="robot_name" default="$(optenv ROBOT_NAME recbot0)" />
  <arg name="atak_polygon" default="true" />
  <arg name="param_file" default="$(find waypoint_planner)/config/default_parameters.yaml" />
  <arg name="robot_type" default="" doc="optional override for robot type that doesn't require config change"/>
  <arg name="nats_cell_selection_prob" default="" doc="optional override for NATS cell selection Probability that doesn't require config change"/>
  <arg name="autonomy_server_topic" default="" doc="optional override for autonomy_server_topic that doesn't require config change" />
  <arg name="location" default="ntc" />
  <arg name="search_mode" default="" doc="optional override for search_mode that doesn't require config change" />
  <arg name="visibility_cost_weightage" default="" doc="optional override for visibility_cost_weightage that doesn't require config change" />
  <arg name="distance_cost_weightage" default="" doc="optional override for distance_cost_weightage that doesn't require config change" />
  <arg name="map_type" default="aerial_v03" />
  <arg name="log_config" default="zone_recon_metrics" />
  <arg name="log_dir" default="$(optenv BAG_LOG_DIR)" />
  <arg name="logging_path" default="$(arg log_dir)/$(arg log_config)/" if="$(eval log_dir != '')"/>
  <arg name="logging_path" default="$(env ROS_LOG_DIR)/$(arg log_config)/" unless="$(eval log_dir != '')"/>
  <arg name="enable_zone_recon_evaluation" default="false" doc="set true to evaluate zone_recon"/>
  <arg name="random_seed" default="0" />
  <arg name="threat_sampling" default="uniform" doc="[uniform, stealth]" />
  <arg name="simulate_crosspose" default="false" doc="when running in autonomy simulator with multiple agents set as true" />
  <arg name="autonomy_faker" default="false" doc="prevents the need to launch aidtr autonomy, faster simplified simulator" />
  <arg name="num_targets" default="5" doc="number of targets to simulate"/>

<!--   <group if="$(eval arg('robot_type') == 'uas')"> -->
<!--      --><!-- Map server -->
<!--     <node name="map_server" pkg="map_server" type="map_server" -->
<!--       args="$(env AUTONOMY_DIR)/assets/aidtr_locations/$(arg location)/map/$(arg map_type)_map.yaml" output="screen"> -->
<!--       <param name="frame_id" value="$(arg robot_name)/map" /> -->
<!--       <param name="map" value="/$(arg robot_name)/navigation_manager/global/costmap" /> -->
<!--     </node> -->
<!--   </group> -->

  <group if="$(arg atak_polygon)">
    <group if="$(eval arg('autonomy_faker') == 'false')">
      <!-- ATAK interface Node -->
      <include file="$(find waypoint_planner)/launch/convert_to_search_polygon.launch">
        <arg name="robot_name" value="$(arg robot_name)" />
      </include>
    </group>
  </group>

  <group ns="$(arg robot_name)">
    <group if="$(arg autonomy_faker)">
      <node name="autonomy_faker" pkg="waypoint_planner" type="autonomy_faker.py" output="screen">
        <param name="robot_name" type="string" value="$(arg robot_name)" />
        <!-- Load common configuration parameters -->
        <rosparam command="load" file="$(arg param_file)" subst_value="true" />
        <!-- Make argument in future to be able to select a different paradigm -->
        <rosparam command="load" file="$(find waypoint_planner)/config/nats_params.yaml" subst_value="true" />
        <param name="location" value="$(arg location)" unless="$(eval arg('logging_path') == '')" />
        <param name="map_type" value="$(arg map_type)" unless="$(eval arg('map_type') == '')" />
        <param name="robot_type" value="$(arg robot_type)" unless="$(eval arg('robot_type') == '')" />
        <param name="random_seed" value="$(arg random_seed)" unless="$(eval arg('random_seed') == '')" />
        <param name="visibility_cost_weightage" value="$(arg visibility_cost_weightage)" unless="$(eval arg('visibility_cost_weightage') == '')" />
        <param name="search_mode" value="$(arg search_mode)" unless="$(eval arg('search_mode') == '')" />
      </node>
    </group>

    <node name="waypoint_planner" pkg="waypoint_planner" type="waypoint_action_client.py" output="screen">
      <param name="robot_name" type="string" value="$(arg robot_name)" />
      <!-- Load common configuration parameters -->
      <rosparam command="load" file="$(arg param_file)" subst_value="true" />
      <!-- Make argument in future to be able to select a different paradigm -->
      <rosparam command="load" file="$(find waypoint_planner)/config/nats_params.yaml" subst_value="true" />
      <!-- Comes into play only for UAS, defines bounds of map -->
      <rosparam command="load" file="$(find waypoint_planner)/config/$(arg location).yaml" subst_value="true" />
      <param name="robot_type" value="$(arg robot_type)" unless="$(eval arg('robot_type') == '')" />
      <param name="nats_cell_selection_prob" value="$(arg nats_cell_selection_prob)" unless="$(eval arg('nats_cell_selection_prob') == '')" />
      <param name="autonomy_server_topic" value="$(arg autonomy_server_topic)" unless="$(eval arg('autonomy_server_topic') == '')" />
      <param name="search_mode" value="$(arg search_mode)" unless="$(eval arg('search_mode') == '')" />
      <param name="visibility_cost_weightage" value="$(arg visibility_cost_weightage)" unless="$(eval arg('visibility_cost_weightage') == '')" />
      <param name="distance_cost_weightage" value="$(arg distance_cost_weightage)" unless="$(eval arg('distance_cost_weightage') == '')" />
      <param name="logging_path" value="$(arg logging_path)" unless="$(eval arg('logging_path') == '')" />
      <param name="location" value="$(arg location)" unless="$(eval arg('logging_path') == '')" />
      <param name="map_type" value="$(arg map_type)" unless="$(eval arg('map_type') == '')" />
      <param name="random_seed" value="$(arg random_seed)" unless="$(eval arg('random_seed') == '')" />
      <param name="threat_sampling" value="$(arg threat_sampling)" unless="$(eval arg('threat_sampling') == '')" />
      <param name="simulate_crosspose" value="$(arg simulate_crosspose)" unless="$(eval arg('simulate_crosspose') == '')" />
      <param name="autonomy_faker" value="$(arg autonomy_faker)" unless="$(eval arg('autonomy_faker') == '')" />
      <param name="num_targets" value="$(arg num_targets)" unless="$(eval arg('num_targets') == '')" />
    </node>

    <group if="$(eval arg('autonomy_faker') == 'false')">
        <node name="lowres_to_highres_visibility_node" pkg="waypoint_planner" type="visibility_cost_publisher.py" output="screen">
          <param name="robot_name" type="string" value="$(arg robot_name)" />
          <!-- Load common configuration parameters -->
          <rosparam command="load" file="$(arg param_file)" subst_value="true" />
          <!-- Make argument in future to be able to select a different paradigm -->
          <rosparam command="load" file="$(find waypoint_planner)/config/nats_params.yaml" subst_value="true" />
          <!-- Comes into play only for UAS, defines bounds of map -->
          <rosparam command="load" file="$(find waypoint_planner)/config/$(arg location).yaml" subst_value="true" />
          <param name="location" value="$(arg location)" unless="$(eval arg('logging_path') == '')" />
          <param name="map_type" value="$(arg map_type)" unless="$(eval arg('map_type') == '')" />
        </node>
    </group>

<!-- <<<<<<< HEAD -->
<!--     <group if="$(arg enable_zone_recon_evaluation)"> -->
<!--        --><!-- Waypoint Planner Node -->
<!--       <node name="evaluate_policies" pkg="waypoint_planner" type="evaluate_policies.py" output="screen"> -->
<!--       <param name="robot_name" type="string" value="$(arg robot_name)" /> -->
<!--        --><!-- Load common configuration parameters -->
<!--       <rosparam command="load" file="$(arg param_file)" subst_value="true" /> -->
<!--        --><!-- Make argument in future to be able to select a different paradigm -->
<!--       <rosparam command="load" file="$(find waypoint_planner)/config/nats_params.yaml" subst_value="true" /> -->
<!--        --><!-- Comes into play only for UAS, defines bounds of map -->
<!--       <rosparam command="load" file="$(find waypoint_planner)/config/$(arg location).yaml" subst_value="true" /> -->
<!--       <param name="robot_type" value="$(arg robot_type)" unless="$(eval arg('robot_type') == '')" /> -->
<!--       <param name="logging_path" value="$(arg logging_path)" unless="$(eval arg('logging_path') == '')" /> -->
<!--     </node> -->
<!--    </group> -->
<!-- ======= -->
    <group if="$(arg simulate_crosspose)">
      <node name="crosspose_faker" pkg="waypoint_planner" type="simulate_crosspose.py" output="screen">
        <param name="robot_name" type="string" value="$(arg robot_name)" />
        <!-- Load common configuration parameters -->
        <rosparam command="load" file="$(arg param_file)" subst_value="true" />
        <!-- Make argument in future to be able to select a different paradigm -->
        <rosparam command="load" file="$(find waypoint_planner)/config/nats_params.yaml" subst_value="true" />
        <param name="autonomy_faker" value="$(arg autonomy_faker)" unless="$(eval arg('autonomy_faker') == '')" />
      </node>
    </group>
<!-- >>>>>>> tejus/evaluate_multirobot -->

  </group>

</launch>
